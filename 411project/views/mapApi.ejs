<!DOCTYPE html>
<html>
  <head>
    <style>
       #map {
        height: 400px;
        width: 100%;
       }
    </style>
  </head>
  <body>
    <h3>Contact Location</h3>
    <div id="map"></div>
    <script>
<<<<<<< HEAD
// This example adds a search box to a map, using the Google Place Autocomplete
// feature. People can enter geographical searches. The search box will return a
// pick list containing a mix of places and predicted search terms.


function initAutocomplete() {

var addr = location.search.split('address=')[1]

var request = new XMLHttpRequest();
var lat;
var lng;
request.onreadystatechange = function() {
    if (request.readyState === 4) {
        if (request.status === 200) {
            document.body.className = 'ok';
            var jsondata = JSON.parse(request.responseText);
            
            lat = jsondata["results"]["0"]["geometry"]["location"]["lat"];
            lng = jsondata["results"]["0"]["geometry"]["location"]["lng"];
        } else {
            document.body.className = 'error';
        }
    }
};
request.open("GET","https://maps.googleapis.com/maps/api/geocode/json?address=addr&key=AIzaSyBpK2Djlc9FPKw3ZL9xZgNwPUTAxT8ykCk" , true);
request.send(null);

while (!lat) {}
  var map = new google.maps.Map(document.getElementById('map'), {
    center: {
      "lat": lat,
      "lng": lng
    },
    zoom: 13,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });

  // Create the search box and link it to the UI element.
  var input = document.getElementById('pac-input');
  var searchBox = new google.maps.places.SearchBox(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

  // Bias the SearchBox results towards current map's viewport.
  map.addListener('bounds_changed', function() {
    searchBox.setBounds(map.getBounds());
  });

  var markers = [];
  // [START region_getplaces]
  // Listen for the event fired when the user selects a prediction and retrieve
  // more details for that place.
  searchBox.addListener('places_changed', function() {
    var places = searchBox.getPlaces();

    if (places.length == 0) {
      return;
    }

    // Clear out the old markers.
    markers.forEach(function(marker) {
      marker.setMap(null);
    });
    markers = [];

    // For each place, get the icon, name and location.
    var bounds = new google.maps.LatLngBounds();
    places.forEach(function(place) {
      var icon = {
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25)
      };

      // Create a marker for each place.
      markers.push(new google.maps.Marker({
        map: map,
        icon: icon,
        title: place.name,
        position: place.geometry.location
      }));

      if (place.geometry.viewport) {
        // Only geocodes have viewport.
        bounds.union(place.geometry.viewport);
      } else {
        bounds.extend(place.geometry.location);
=======
      var marker;
      var map;
      function initMap() {
        var uluru = {lat: -25.363, lng: 131.044};
        map = new google.maps.Map(document.getElementById('map'), {
          zoom: 4,
          center: uluru
        });
        var myResult;
        var addr = location.search.split('address=')[1];
	addr = addr.replace(/%20/g, "");
	console.log(addr);
	var geocoder = new google.maps.Geocoder();
	geocoder.geocode({address: addr}, function(results,status) {
	  if (status == google.maps.GeocoderStatus.OK){
	    myResult = results[0].geometry.location;
	    console.log(myResult);
	    createMarker(myResult);
	    map.setCenter(myResult);
	    map.setZoom(17);
	  }
	  else {
	    alert('Geocode was not successful: ' + status);
	  }
	});
      }
      function createMarker(latlng) {
        if(marker != undefined && marker != ''){
	  marker.setMap(null);
	  marker = '';
	}
	marker = new google.maps.Marker({
          position: latlng,
          map: map
        });
>>>>>>> origin/master
      }
    </script>
<<<<<<< HEAD
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBpK2Djlc9FPKw3ZL9xZgNwPUTAxT8ykCk&libraries=places&callback=initAutocomplete&address=" + addr
         async defer></script>
=======
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBpK2Djlc9FPKw3ZL9xZgNwPUTAxT8ykCk&callback=initMap&address=" + addr">
    </script>
>>>>>>> origin/master
  </body>
</html>
